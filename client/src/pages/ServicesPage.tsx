import React, { useState } from 'react';
import { ServiceCard } from '../components/ServiceCard';
import { useNavigate } from 'react-router-dom';
import { useCart } from '../components/CartContext';
import { Notification } from '../components/Notification';
import { motion } from 'framer-motion';

interface Service {
  id: number;
  title: string;
  shortDescription: string;
  fullDescription: string;
  image: string;
  description: string;
  price: number;
}

const SERVICES: Service[] = [
  {
    id: 1,
    title: '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞',
    shortDescription: '–ë—ã—Å—Ç—Ä–∞—è –∏ —Ç–æ—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞',
    fullDescription: '–ü–æ–ª–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –ü–ö –¥–ª—è –≤—ã—è–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º.',
    image: '',
    description: '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞',
    price: 1000,
  },
  {
    id: 2,
    title: '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Windows',
    shortDescription: '–õ–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Windows 10/11',
    fullDescription: '–ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ Windows —Å –¥—Ä–∞–π–≤–µ—Ä–∞–º–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π.',
    image: '',
    description: '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Windows',
    price: 1500,
  },
];

export const ServicesPage: React.FC = () => {
  const { cartItems, addToCart } = useCart();
  const navigate = useNavigate();
  const [notificationMessage, setNotificationMessage] = useState<string | null>(null);

  const handleAddToCart = (service: Service) => {
    addToCart({
      id: service.id,
      service: service.title,
      price: service.price,
    });
    setNotificationMessage(`"${service.title}" –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É`);
  };

  return (
    <main className="bg-gray-50 min-h-screen py-20 px-4">
      <div className="max-w-7xl mx-auto">
        {/* Header */}
        <div className="flex flex-col md:flex-row justify-between items-center mb-12 gap-4">
          <div>
            <h1 className="text-4xl font-bold text-violet-700">–ù–∞—à–∏ —É—Å–ª—É–≥–∏</h1>
            <p className="text-gray-600 mt-2">
              –ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —à–∏—Ä–æ–∫–∏–π —Å–ø–µ–∫—Ç—Ä —Å–µ—Ä–≤–∏—Å–Ω—ã—Ö —É—Å–ª—É–≥ –¥–ª—è –≤–∞—à–µ–≥–æ –ü–ö –∏–ª–∏ –Ω–æ—É—Ç–±—É–∫–∞.
            </p>
          </div>

          <button
            onClick={() => navigate('/profile/cart')}
            className="relative bg-violet-600 hover:bg-violet-700 text-white px-6 py-3 rounded-xl shadow-md transition"
          >
            üõí –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É
            {cartItems.length > 0 && (
              <span className="absolute -top-2 -right-2 bg-red-500 text-white text-xs rounded-full px-2 py-0.5">
                {cartItems.length}
              </span>
            )}
          </button>
        </div>

        {/* Services Grid */}
        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8">
          {SERVICES.map((service, index) => (
            <motion.div
              key={service.id}
              initial={{ opacity: 0, y: 30 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ delay: index * 0.1, duration: 0.4 }}
            >
              <ServiceCard
                {...service}
                onAddToCart={() => handleAddToCart(service)} // ‚¨ÖÔ∏è –∫–∞—Å—Ç–æ–º–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ
              />
            </motion.div>
          ))}
        </div>
      </div>

      {/* Notification */}
      {notificationMessage && (
        <Notification
          message={notificationMessage}
          onClose={() => setNotificationMessage(null)}
        />
      )}
    </main>
  );
};

export default ServicesPage;
